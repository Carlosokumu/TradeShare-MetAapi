'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _httpClient = require('./clients/httpClient');

var _httpClient2 = _interopRequireDefault(_httpClient);

var _configuration = require('./clients/copyFactory/configuration.client');

var _configuration2 = _interopRequireDefault(_configuration);

var _history = require('./clients/copyFactory/history.client');

var _history2 = _interopRequireDefault(_history);

var _trading = require('./clients/copyFactory/trading.client');

var _trading2 = _interopRequireDefault(_trading);

var _domain = require('./clients/domain.client');

var _domain2 = _interopRequireDefault(_domain);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * MetaApi CopyFactory copy trading API SDK
 */
class CopyFactory {

  /**
   * Enables using Log4js logger with extended log levels for debugging instead of
   * console.* functions. Note that log4js configuration performed by the user.
   */
  static enableLog4jsLogging() {
    _logger2.default.useLog4js();
  }

  /**
   * Constructs CopyFactory class instance
   * @param {String} token authorization token
   * @param {Object} opts connection options
   * @param {String} [opts.domain] domain to connect to
   * @param {String} [opts.extendedTimeout] timeout for extended http requests in seconds
   * @param {Number} [opts.requestTimeout] timeout for http requests in seconds
   */
  constructor(token, opts = {}) {
    this._domain = opts.domain || 'agiliumtrade.agiliumtrade.ai';
    let requestTimeout = opts.requestTimeout || 10;
    let requestExtendedTimeout = opts.extendedTimeout || 70;
    const retryOpts = opts.retryOpts || {};
    this._httpClient = new _httpClient2.default(requestTimeout, requestExtendedTimeout, retryOpts);
    this._domainClient = new _domain2.default(this._httpClient, token, this._domain);
    this._configurationClient = new _configuration2.default(this._domainClient);
    this._historyClient = new _history2.default(this._domainClient);
    this._tradingClient = new _trading2.default(this._domainClient);
  }

  /**
   * Returns CopyFactory configuration API
   * @returns {ConfigurationClient} configuration API
   */
  get configurationApi() {
    return this._configurationClient;
  }

  /**
   * Returns CopyFactory history API
   * @return {HistoryClient} history API
   */
  get historyApi() {
    return this._historyClient;
  }

  /**
   * Returns CopyFactory trading API
   * @return {TradingClient} trading API
   */
  get tradingApi() {
    return this._tradingClient;
  }
}
exports.default = CopyFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xpYi9jb3B5RmFjdG9yeS5lczYiXSwibmFtZXMiOlsiQ29weUZhY3RvcnkiLCJlbmFibGVMb2c0anNMb2dnaW5nIiwiTG9nZ2VyTWFuYWdlciIsInVzZUxvZzRqcyIsImNvbnN0cnVjdG9yIiwidG9rZW4iLCJvcHRzIiwiX2RvbWFpbiIsImRvbWFpbiIsInJlcXVlc3RUaW1lb3V0IiwicmVxdWVzdEV4dGVuZGVkVGltZW91dCIsImV4dGVuZGVkVGltZW91dCIsInJldHJ5T3B0cyIsIl9odHRwQ2xpZW50IiwiSHR0cENsaWVudCIsIl9kb21haW5DbGllbnQiLCJEb21haW5DbGllbnQiLCJfY29uZmlndXJhdGlvbkNsaWVudCIsIkNvbmZpZ3VyYXRpb25DbGllbnQiLCJfaGlzdG9yeUNsaWVudCIsIkhpc3RvcnlDbGllbnQiLCJfdHJhZGluZ0NsaWVudCIsIlRyYWRpbmdDbGllbnQiLCJjb25maWd1cmF0aW9uQXBpIiwiaGlzdG9yeUFwaSIsInRyYWRpbmdBcGkiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOzs7QUFHZSxNQUFNQSxXQUFOLENBQWtCOztBQUUvQjs7OztBQUlBLFNBQU9DLG1CQUFQLEdBQTZCO0FBQzNCQyxxQkFBY0MsU0FBZDtBQUNEOztBQUVEOzs7Ozs7OztBQVFBQyxjQUFZQyxLQUFaLEVBQW1CQyxPQUFPLEVBQTFCLEVBQThCO0FBQzVCLFNBQUtDLE9BQUwsR0FBZUQsS0FBS0UsTUFBTCxJQUFlLDhCQUE5QjtBQUNBLFFBQUlDLGlCQUFpQkgsS0FBS0csY0FBTCxJQUF1QixFQUE1QztBQUNBLFFBQUlDLHlCQUF5QkosS0FBS0ssZUFBTCxJQUF3QixFQUFyRDtBQUNBLFVBQU1DLFlBQVlOLEtBQUtNLFNBQUwsSUFBa0IsRUFBcEM7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLElBQUlDLG9CQUFKLENBQWVMLGNBQWYsRUFBK0JDLHNCQUEvQixFQUF1REUsU0FBdkQsQ0FBbkI7QUFDQSxTQUFLRyxhQUFMLEdBQXFCLElBQUlDLGdCQUFKLENBQWlCLEtBQUtILFdBQXRCLEVBQW1DUixLQUFuQyxFQUEwQyxLQUFLRSxPQUEvQyxDQUFyQjtBQUNBLFNBQUtVLG9CQUFMLEdBQTRCLElBQUlDLHVCQUFKLENBQXdCLEtBQUtILGFBQTdCLENBQTVCO0FBQ0EsU0FBS0ksY0FBTCxHQUFzQixJQUFJQyxpQkFBSixDQUFrQixLQUFLTCxhQUF2QixDQUF0QjtBQUNBLFNBQUtNLGNBQUwsR0FBc0IsSUFBSUMsaUJBQUosQ0FBa0IsS0FBS1AsYUFBdkIsQ0FBdEI7QUFDRDs7QUFFRDs7OztBQUlBLE1BQUlRLGdCQUFKLEdBQXVCO0FBQ3JCLFdBQU8sS0FBS04sb0JBQVo7QUFDRDs7QUFFRDs7OztBQUlBLE1BQUlPLFVBQUosR0FBaUI7QUFDZixXQUFPLEtBQUtMLGNBQVo7QUFDRDs7QUFFRDs7OztBQUlBLE1BQUlNLFVBQUosR0FBaUI7QUFDZixXQUFPLEtBQUtKLGNBQVo7QUFDRDtBQXBEOEI7a0JBQVpyQixXIiwiZmlsZSI6ImNvcHlGYWN0b3J5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgSHR0cENsaWVudCBmcm9tICcuL2NsaWVudHMvaHR0cENsaWVudCc7XG5pbXBvcnQgQ29uZmlndXJhdGlvbkNsaWVudCBmcm9tICcuL2NsaWVudHMvY29weUZhY3RvcnkvY29uZmlndXJhdGlvbi5jbGllbnQnO1xuaW1wb3J0IEhpc3RvcnlDbGllbnQgZnJvbSAnLi9jbGllbnRzL2NvcHlGYWN0b3J5L2hpc3RvcnkuY2xpZW50JztcbmltcG9ydCBUcmFkaW5nQ2xpZW50IGZyb20gJy4vY2xpZW50cy9jb3B5RmFjdG9yeS90cmFkaW5nLmNsaWVudCc7XG5pbXBvcnQgRG9tYWluQ2xpZW50IGZyb20gJy4vY2xpZW50cy9kb21haW4uY2xpZW50JztcbmltcG9ydCBMb2dnZXJNYW5hZ2VyIGZyb20gJy4vbG9nZ2VyJztcblxuLyoqXG4gKiBNZXRhQXBpIENvcHlGYWN0b3J5IGNvcHkgdHJhZGluZyBBUEkgU0RLXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcHlGYWN0b3J5IHtcblxuICAvKipcbiAgICogRW5hYmxlcyB1c2luZyBMb2c0anMgbG9nZ2VyIHdpdGggZXh0ZW5kZWQgbG9nIGxldmVscyBmb3IgZGVidWdnaW5nIGluc3RlYWQgb2ZcbiAgICogY29uc29sZS4qIGZ1bmN0aW9ucy4gTm90ZSB0aGF0IGxvZzRqcyBjb25maWd1cmF0aW9uIHBlcmZvcm1lZCBieSB0aGUgdXNlci5cbiAgICovXG4gIHN0YXRpYyBlbmFibGVMb2c0anNMb2dnaW5nKCkge1xuICAgIExvZ2dlck1hbmFnZXIudXNlTG9nNGpzKCk7XG4gIH1cblxuICAvKipcbiAgICogQ29uc3RydWN0cyBDb3B5RmFjdG9yeSBjbGFzcyBpbnN0YW5jZVxuICAgKiBAcGFyYW0ge1N0cmluZ30gdG9rZW4gYXV0aG9yaXphdGlvbiB0b2tlblxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0cyBjb25uZWN0aW9uIG9wdGlvbnNcbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRzLmRvbWFpbl0gZG9tYWluIHRvIGNvbm5lY3QgdG9cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRzLmV4dGVuZGVkVGltZW91dF0gdGltZW91dCBmb3IgZXh0ZW5kZWQgaHR0cCByZXF1ZXN0cyBpbiBzZWNvbmRzXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0cy5yZXF1ZXN0VGltZW91dF0gdGltZW91dCBmb3IgaHR0cCByZXF1ZXN0cyBpbiBzZWNvbmRzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih0b2tlbiwgb3B0cyA9IHt9KSB7XG4gICAgdGhpcy5fZG9tYWluID0gb3B0cy5kb21haW4gfHwgJ2FnaWxpdW10cmFkZS5hZ2lsaXVtdHJhZGUuYWknO1xuICAgIGxldCByZXF1ZXN0VGltZW91dCA9IG9wdHMucmVxdWVzdFRpbWVvdXQgfHwgMTA7XG4gICAgbGV0IHJlcXVlc3RFeHRlbmRlZFRpbWVvdXQgPSBvcHRzLmV4dGVuZGVkVGltZW91dCB8fCA3MDtcbiAgICBjb25zdCByZXRyeU9wdHMgPSBvcHRzLnJldHJ5T3B0cyB8fCB7fTtcbiAgICB0aGlzLl9odHRwQ2xpZW50ID0gbmV3IEh0dHBDbGllbnQocmVxdWVzdFRpbWVvdXQsIHJlcXVlc3RFeHRlbmRlZFRpbWVvdXQsIHJldHJ5T3B0cyk7XG4gICAgdGhpcy5fZG9tYWluQ2xpZW50ID0gbmV3IERvbWFpbkNsaWVudCh0aGlzLl9odHRwQ2xpZW50LCB0b2tlbiwgdGhpcy5fZG9tYWluKTtcbiAgICB0aGlzLl9jb25maWd1cmF0aW9uQ2xpZW50ID0gbmV3IENvbmZpZ3VyYXRpb25DbGllbnQodGhpcy5fZG9tYWluQ2xpZW50KTtcbiAgICB0aGlzLl9oaXN0b3J5Q2xpZW50ID0gbmV3IEhpc3RvcnlDbGllbnQodGhpcy5fZG9tYWluQ2xpZW50KTtcbiAgICB0aGlzLl90cmFkaW5nQ2xpZW50ID0gbmV3IFRyYWRpbmdDbGllbnQodGhpcy5fZG9tYWluQ2xpZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIENvcHlGYWN0b3J5IGNvbmZpZ3VyYXRpb24gQVBJXG4gICAqIEByZXR1cm5zIHtDb25maWd1cmF0aW9uQ2xpZW50fSBjb25maWd1cmF0aW9uIEFQSVxuICAgKi9cbiAgZ2V0IGNvbmZpZ3VyYXRpb25BcGkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmZpZ3VyYXRpb25DbGllbnQ7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBDb3B5RmFjdG9yeSBoaXN0b3J5IEFQSVxuICAgKiBAcmV0dXJuIHtIaXN0b3J5Q2xpZW50fSBoaXN0b3J5IEFQSVxuICAgKi9cbiAgZ2V0IGhpc3RvcnlBcGkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hpc3RvcnlDbGllbnQ7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBDb3B5RmFjdG9yeSB0cmFkaW5nIEFQSVxuICAgKiBAcmV0dXJuIHtUcmFkaW5nQ2xpZW50fSB0cmFkaW5nIEFQSVxuICAgKi9cbiAgZ2V0IHRyYWRpbmdBcGkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RyYWRpbmdDbGllbnQ7XG4gIH1cbn1cbiJdfQ==