'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _streamingMetaApiConnection = require('./streamingMetaApiConnection');

var _streamingMetaApiConnection2 = _interopRequireDefault(_streamingMetaApiConnection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Manages account connections
 */
class ConnectionRegistry {

  /**
   * Constructs a MetaTrader connection registry instance
   * @param {MetaApiWebsocketClient} metaApiWebsocketClient MetaApi websocket client
   * @param {ClientApiClient} clientApiClient client API client
   * @param {String} application application id
   * @param {String} refreshSubscriptionsOpts subscriptions refresh options
   */
  constructor(metaApiWebsocketClient, clientApiClient, application = 'MetaApi', refreshSubscriptionsOpts) {
    refreshSubscriptionsOpts = refreshSubscriptionsOpts || {};
    this._metaApiWebsocketClient = metaApiWebsocketClient;
    this._clientApiClient = clientApiClient;
    this._application = application;
    this._refreshSubscriptionsOpts = refreshSubscriptionsOpts;
    this._connections = {};
    this._connectionLocks = {};
  }

  /**
   * Creates and returns a new account connection if doesnt exist, otherwise returns old
   * @param {MetatraderAccount} account MetaTrader account id to connect to
   * @param {HistoryStorage} historyStorage terminal history storage
   * @param {Date} [historyStartTime] history start time
   * @return {StreamingMetaApiConnection} streaming metaapi connection
   */
  connect(account, historyStorage, historyStartTime) {
    if (this._connections[account.id]) {
      return this._connections[account.id];
    }
    this._connections[account.id] = new _streamingMetaApiConnection2.default(this._metaApiWebsocketClient, this._clientApiClient, account, historyStorage, this, historyStartTime, this._refreshSubscriptionsOpts);
    return this._connections[account.id];
  }

  /**
   * Removes an account from registry
   * @param {string} accountId MetaTrader account id to remove
   */
  remove(accountId) {
    if (this._connections[accountId]) {
      delete this._connections[accountId];
    }
  }

  /**
   * Returns application type
   * @return {String} application type
   */
  get application() {
    return this._application;
  }
}
exports.default = ConnectionRegistry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9tZXRhQXBpL2Nvbm5lY3Rpb25SZWdpc3RyeS5lczYiXSwibmFtZXMiOlsiQ29ubmVjdGlvblJlZ2lzdHJ5IiwiY29uc3RydWN0b3IiLCJtZXRhQXBpV2Vic29ja2V0Q2xpZW50IiwiY2xpZW50QXBpQ2xpZW50IiwiYXBwbGljYXRpb24iLCJyZWZyZXNoU3Vic2NyaXB0aW9uc09wdHMiLCJfbWV0YUFwaVdlYnNvY2tldENsaWVudCIsIl9jbGllbnRBcGlDbGllbnQiLCJfYXBwbGljYXRpb24iLCJfcmVmcmVzaFN1YnNjcmlwdGlvbnNPcHRzIiwiX2Nvbm5lY3Rpb25zIiwiX2Nvbm5lY3Rpb25Mb2NrcyIsImNvbm5lY3QiLCJhY2NvdW50IiwiaGlzdG9yeVN0b3JhZ2UiLCJoaXN0b3J5U3RhcnRUaW1lIiwiaWQiLCJTdHJlYW1pbmdNZXRhQXBpQ29ubmVjdGlvbiIsInJlbW92ZSIsImFjY291bnRJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBOzs7QUFHZSxNQUFNQSxrQkFBTixDQUF5Qjs7QUFFdEM7Ozs7Ozs7QUFPQUMsY0FBWUMsc0JBQVosRUFBb0NDLGVBQXBDLEVBQXFEQyxjQUFjLFNBQW5FLEVBQThFQyx3QkFBOUUsRUFBd0c7QUFDdEdBLCtCQUEyQkEsNEJBQTRCLEVBQXZEO0FBQ0EsU0FBS0MsdUJBQUwsR0FBK0JKLHNCQUEvQjtBQUNBLFNBQUtLLGdCQUFMLEdBQXdCSixlQUF4QjtBQUNBLFNBQUtLLFlBQUwsR0FBb0JKLFdBQXBCO0FBQ0EsU0FBS0sseUJBQUwsR0FBaUNKLHdCQUFqQztBQUNBLFNBQUtLLFlBQUwsR0FBb0IsRUFBcEI7QUFDQSxTQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNEOztBQUVEOzs7Ozs7O0FBT0FDLFVBQVFDLE9BQVIsRUFBaUJDLGNBQWpCLEVBQWlDQyxnQkFBakMsRUFBbUQ7QUFDakQsUUFBSSxLQUFLTCxZQUFMLENBQWtCRyxRQUFRRyxFQUExQixDQUFKLEVBQW1DO0FBQ2pDLGFBQU8sS0FBS04sWUFBTCxDQUFrQkcsUUFBUUcsRUFBMUIsQ0FBUDtBQUNEO0FBQ0QsU0FBS04sWUFBTCxDQUFrQkcsUUFBUUcsRUFBMUIsSUFBZ0MsSUFBSUMsb0NBQUosQ0FBK0IsS0FBS1gsdUJBQXBDLEVBQzlCLEtBQUtDLGdCQUR5QixFQUNQTSxPQURPLEVBQ0VDLGNBREYsRUFDa0IsSUFEbEIsRUFDd0JDLGdCQUR4QixFQUMwQyxLQUFLTix5QkFEL0MsQ0FBaEM7QUFFQSxXQUFPLEtBQUtDLFlBQUwsQ0FBa0JHLFFBQVFHLEVBQTFCLENBQVA7QUFDRDs7QUFFRDs7OztBQUlBRSxTQUFPQyxTQUFQLEVBQWtCO0FBQ2hCLFFBQUksS0FBS1QsWUFBTCxDQUFrQlMsU0FBbEIsQ0FBSixFQUFrQztBQUNoQyxhQUFPLEtBQUtULFlBQUwsQ0FBa0JTLFNBQWxCLENBQVA7QUFDRDtBQUNGOztBQUVEOzs7O0FBSUEsTUFBSWYsV0FBSixHQUFrQjtBQUNoQixXQUFPLEtBQUtJLFlBQVo7QUFDRDtBQW5EcUM7a0JBQW5CUixrQiIsImZpbGUiOiJjb25uZWN0aW9uUmVnaXN0cnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RyZWFtaW5nTWV0YUFwaUNvbm5lY3Rpb24gZnJvbSAnLi9zdHJlYW1pbmdNZXRhQXBpQ29ubmVjdGlvbic7XG5cbi8qKlxuICogTWFuYWdlcyBhY2NvdW50IGNvbm5lY3Rpb25zXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbm5lY3Rpb25SZWdpc3RyeSB7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBNZXRhVHJhZGVyIGNvbm5lY3Rpb24gcmVnaXN0cnkgaW5zdGFuY2VcbiAgICogQHBhcmFtIHtNZXRhQXBpV2Vic29ja2V0Q2xpZW50fSBtZXRhQXBpV2Vic29ja2V0Q2xpZW50IE1ldGFBcGkgd2Vic29ja2V0IGNsaWVudFxuICAgKiBAcGFyYW0ge0NsaWVudEFwaUNsaWVudH0gY2xpZW50QXBpQ2xpZW50IGNsaWVudCBBUEkgY2xpZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBhcHBsaWNhdGlvbiBhcHBsaWNhdGlvbiBpZFxuICAgKiBAcGFyYW0ge1N0cmluZ30gcmVmcmVzaFN1YnNjcmlwdGlvbnNPcHRzIHN1YnNjcmlwdGlvbnMgcmVmcmVzaCBvcHRpb25zXG4gICAqL1xuICBjb25zdHJ1Y3RvcihtZXRhQXBpV2Vic29ja2V0Q2xpZW50LCBjbGllbnRBcGlDbGllbnQsIGFwcGxpY2F0aW9uID0gJ01ldGFBcGknLCByZWZyZXNoU3Vic2NyaXB0aW9uc09wdHMpIHtcbiAgICByZWZyZXNoU3Vic2NyaXB0aW9uc09wdHMgPSByZWZyZXNoU3Vic2NyaXB0aW9uc09wdHMgfHwge307XG4gICAgdGhpcy5fbWV0YUFwaVdlYnNvY2tldENsaWVudCA9IG1ldGFBcGlXZWJzb2NrZXRDbGllbnQ7XG4gICAgdGhpcy5fY2xpZW50QXBpQ2xpZW50ID0gY2xpZW50QXBpQ2xpZW50O1xuICAgIHRoaXMuX2FwcGxpY2F0aW9uID0gYXBwbGljYXRpb247XG4gICAgdGhpcy5fcmVmcmVzaFN1YnNjcmlwdGlvbnNPcHRzID0gcmVmcmVzaFN1YnNjcmlwdGlvbnNPcHRzO1xuICAgIHRoaXMuX2Nvbm5lY3Rpb25zID0ge307XG4gICAgdGhpcy5fY29ubmVjdGlvbkxvY2tzID0ge307XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgbmV3IGFjY291bnQgY29ubmVjdGlvbiBpZiBkb2VzbnQgZXhpc3QsIG90aGVyd2lzZSByZXR1cm5zIG9sZFxuICAgKiBAcGFyYW0ge01ldGF0cmFkZXJBY2NvdW50fSBhY2NvdW50IE1ldGFUcmFkZXIgYWNjb3VudCBpZCB0byBjb25uZWN0IHRvXG4gICAqIEBwYXJhbSB7SGlzdG9yeVN0b3JhZ2V9IGhpc3RvcnlTdG9yYWdlIHRlcm1pbmFsIGhpc3Rvcnkgc3RvcmFnZVxuICAgKiBAcGFyYW0ge0RhdGV9IFtoaXN0b3J5U3RhcnRUaW1lXSBoaXN0b3J5IHN0YXJ0IHRpbWVcbiAgICogQHJldHVybiB7U3RyZWFtaW5nTWV0YUFwaUNvbm5lY3Rpb259IHN0cmVhbWluZyBtZXRhYXBpIGNvbm5lY3Rpb25cbiAgICovXG4gIGNvbm5lY3QoYWNjb3VudCwgaGlzdG9yeVN0b3JhZ2UsIGhpc3RvcnlTdGFydFRpbWUpIHtcbiAgICBpZiAodGhpcy5fY29ubmVjdGlvbnNbYWNjb3VudC5pZF0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9jb25uZWN0aW9uc1thY2NvdW50LmlkXTtcbiAgICB9XG4gICAgdGhpcy5fY29ubmVjdGlvbnNbYWNjb3VudC5pZF0gPSBuZXcgU3RyZWFtaW5nTWV0YUFwaUNvbm5lY3Rpb24odGhpcy5fbWV0YUFwaVdlYnNvY2tldENsaWVudCwgXG4gICAgICB0aGlzLl9jbGllbnRBcGlDbGllbnQsIGFjY291bnQsIGhpc3RvcnlTdG9yYWdlLCB0aGlzLCBoaXN0b3J5U3RhcnRUaW1lLCB0aGlzLl9yZWZyZXNoU3Vic2NyaXB0aW9uc09wdHMpO1xuICAgIHJldHVybiB0aGlzLl9jb25uZWN0aW9uc1thY2NvdW50LmlkXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGFuIGFjY291bnQgZnJvbSByZWdpc3RyeVxuICAgKiBAcGFyYW0ge3N0cmluZ30gYWNjb3VudElkIE1ldGFUcmFkZXIgYWNjb3VudCBpZCB0byByZW1vdmVcbiAgICovXG4gIHJlbW92ZShhY2NvdW50SWQpIHtcbiAgICBpZiAodGhpcy5fY29ubmVjdGlvbnNbYWNjb3VudElkXSkge1xuICAgICAgZGVsZXRlIHRoaXMuX2Nvbm5lY3Rpb25zW2FjY291bnRJZF07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYXBwbGljYXRpb24gdHlwZVxuICAgKiBAcmV0dXJuIHtTdHJpbmd9IGFwcGxpY2F0aW9uIHR5cGVcbiAgICovXG4gIGdldCBhcHBsaWNhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fYXBwbGljYXRpb247XG4gIH1cbn1cbiJdfQ==