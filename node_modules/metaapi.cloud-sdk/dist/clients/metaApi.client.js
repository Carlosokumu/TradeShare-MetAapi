'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _methodAccessError = require('./methodAccessError');

var _methodAccessError2 = _interopRequireDefault(_methodAccessError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * metaapi.cloud MetaTrader API client
 */
class MetaApiClient {

  /**
   * Constructs MetaTrader API client instance
   * @param {HttpClient} httpClient HTTP client
   * @param {DomainClient} domainClient domain client
   */
  constructor(httpClient, domainClient) {
    this._httpClient = httpClient;
    this._domainClient = domainClient;
    this._host = `https://mt-provisioning-api-v1.${domainClient.domain}`;
    this._token = domainClient.token;
  }

  /**
   * Returns type of current token
   * @returns {string} Type of current token
   * @protected
   */
  get _tokenType() {
    if (typeof this._token === 'string' && this._token.split('.').length === 3) {
      return 'api';
    }
    if (typeof this._token === 'string' && this._token.split('.').length === 1) {
      return 'account';
    }
    return '';
  }

  /**
   * Checks that current token is not api token
   * @returns {boolean} Indicator of absence api token
   * @protected
   */
  _isNotJwtToken() {
    return typeof this._token !== 'string' || this._token.split('.').length !== 3;
  }

  /**
   * Checks that current token is not account token
   * @returns {boolean} Indicator of absence account token
   * @protected
   */
  _isNotAccountToken() {
    return typeof this._token !== 'string' || this._token.split('.').length !== 1;
  }

  /**
   * Handles no accessing to the method
   * @param {string} methodName Name of method
   * @protected
   * @throws
   */
  _handleNoAccessError(methodName) {
    return _promise2.default.reject(new _methodAccessError2.default(methodName, this._tokenType));
  }

}
exports.default = MetaApiClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9jbGllbnRzL21ldGFBcGkuY2xpZW50LmVzNiJdLCJuYW1lcyI6WyJNZXRhQXBpQ2xpZW50IiwiY29uc3RydWN0b3IiLCJodHRwQ2xpZW50IiwiZG9tYWluQ2xpZW50IiwiX2h0dHBDbGllbnQiLCJfZG9tYWluQ2xpZW50IiwiX2hvc3QiLCJkb21haW4iLCJfdG9rZW4iLCJ0b2tlbiIsIl90b2tlblR5cGUiLCJzcGxpdCIsImxlbmd0aCIsIl9pc05vdEp3dFRva2VuIiwiX2lzTm90QWNjb3VudFRva2VuIiwiX2hhbmRsZU5vQWNjZXNzRXJyb3IiLCJtZXRob2ROYW1lIiwicmVqZWN0IiwiTWV0aG9kQWNjZXNzRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBRUE7Ozs7OztBQUVBOzs7QUFHZSxNQUFNQSxhQUFOLENBQW9COztBQUVqQzs7Ozs7QUFLQUMsY0FBWUMsVUFBWixFQUF3QkMsWUFBeEIsRUFBc0M7QUFDcEMsU0FBS0MsV0FBTCxHQUFtQkYsVUFBbkI7QUFDQSxTQUFLRyxhQUFMLEdBQXFCRixZQUFyQjtBQUNBLFNBQUtHLEtBQUwsR0FBYyxrQ0FBaUNILGFBQWFJLE1BQU8sRUFBbkU7QUFDQSxTQUFLQyxNQUFMLEdBQWNMLGFBQWFNLEtBQTNCO0FBQ0Q7O0FBRUQ7Ozs7O0FBS0EsTUFBSUMsVUFBSixHQUFpQjtBQUNmLFFBQUksT0FBTyxLQUFLRixNQUFaLEtBQXVCLFFBQXZCLElBQW1DLEtBQUtBLE1BQUwsQ0FBWUcsS0FBWixDQUFrQixHQUFsQixFQUF1QkMsTUFBdkIsS0FBa0MsQ0FBekUsRUFBNEU7QUFDMUUsYUFBTyxLQUFQO0FBQ0Q7QUFDRCxRQUFJLE9BQU8sS0FBS0osTUFBWixLQUF1QixRQUF2QixJQUFtQyxLQUFLQSxNQUFMLENBQVlHLEtBQVosQ0FBa0IsR0FBbEIsRUFBdUJDLE1BQXZCLEtBQWtDLENBQXpFLEVBQTRFO0FBQzFFLGFBQU8sU0FBUDtBQUNEO0FBQ0QsV0FBTyxFQUFQO0FBQ0Q7O0FBRUQ7Ozs7O0FBS0FDLG1CQUFpQjtBQUNmLFdBQU8sT0FBTyxLQUFLTCxNQUFaLEtBQXVCLFFBQXZCLElBQW1DLEtBQUtBLE1BQUwsQ0FBWUcsS0FBWixDQUFrQixHQUFsQixFQUF1QkMsTUFBdkIsS0FBa0MsQ0FBNUU7QUFDRDs7QUFFRDs7Ozs7QUFLQUUsdUJBQXFCO0FBQ25CLFdBQU8sT0FBTyxLQUFLTixNQUFaLEtBQXVCLFFBQXZCLElBQW1DLEtBQUtBLE1BQUwsQ0FBWUcsS0FBWixDQUFrQixHQUFsQixFQUF1QkMsTUFBdkIsS0FBa0MsQ0FBNUU7QUFDRDs7QUFFRDs7Ozs7O0FBTUFHLHVCQUFxQkMsVUFBckIsRUFBaUM7QUFDL0IsV0FBTyxrQkFBUUMsTUFBUixDQUFlLElBQUlDLDJCQUFKLENBQXNCRixVQUF0QixFQUFrQyxLQUFLTixVQUF2QyxDQUFmLENBQVA7QUFDRDs7QUF2RGdDO2tCQUFkVixhIiwiZmlsZSI6Im1ldGFBcGkuY2xpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgTWV0aG9kQWNjZXNzRXJyb3IgZnJvbSAnLi9tZXRob2RBY2Nlc3NFcnJvcic7XG5cbi8qKlxuICogbWV0YWFwaS5jbG91ZCBNZXRhVHJhZGVyIEFQSSBjbGllbnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWV0YUFwaUNsaWVudCB7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgTWV0YVRyYWRlciBBUEkgY2xpZW50IGluc3RhbmNlXG4gICAqIEBwYXJhbSB7SHR0cENsaWVudH0gaHR0cENsaWVudCBIVFRQIGNsaWVudFxuICAgKiBAcGFyYW0ge0RvbWFpbkNsaWVudH0gZG9tYWluQ2xpZW50IGRvbWFpbiBjbGllbnRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGh0dHBDbGllbnQsIGRvbWFpbkNsaWVudCkge1xuICAgIHRoaXMuX2h0dHBDbGllbnQgPSBodHRwQ2xpZW50O1xuICAgIHRoaXMuX2RvbWFpbkNsaWVudCA9IGRvbWFpbkNsaWVudDtcbiAgICB0aGlzLl9ob3N0ID0gYGh0dHBzOi8vbXQtcHJvdmlzaW9uaW5nLWFwaS12MS4ke2RvbWFpbkNsaWVudC5kb21haW59YDtcbiAgICB0aGlzLl90b2tlbiA9IGRvbWFpbkNsaWVudC50b2tlbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHR5cGUgb2YgY3VycmVudCB0b2tlblxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUeXBlIG9mIGN1cnJlbnQgdG9rZW5cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgZ2V0IF90b2tlblR5cGUoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLl90b2tlbiA9PT0gJ3N0cmluZycgJiYgdGhpcy5fdG9rZW4uc3BsaXQoJy4nKS5sZW5ndGggPT09IDMpIHtcbiAgICAgIHJldHVybiAnYXBpJztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB0aGlzLl90b2tlbiA9PT0gJ3N0cmluZycgJiYgdGhpcy5fdG9rZW4uc3BsaXQoJy4nKS5sZW5ndGggPT09IDEpIHtcbiAgICAgIHJldHVybiAnYWNjb3VudCc7XG4gICAgfVxuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgdGhhdCBjdXJyZW50IHRva2VuIGlzIG5vdCBhcGkgdG9rZW5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IEluZGljYXRvciBvZiBhYnNlbmNlIGFwaSB0b2tlblxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfaXNOb3RKd3RUb2tlbigpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMuX3Rva2VuICE9PSAnc3RyaW5nJyB8fCB0aGlzLl90b2tlbi5zcGxpdCgnLicpLmxlbmd0aCAhPT0gMztcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgdGhhdCBjdXJyZW50IHRva2VuIGlzIG5vdCBhY2NvdW50IHRva2VuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBJbmRpY2F0b3Igb2YgYWJzZW5jZSBhY2NvdW50IHRva2VuXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9pc05vdEFjY291bnRUb2tlbigpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMuX3Rva2VuICE9PSAnc3RyaW5nJyB8fCB0aGlzLl90b2tlbi5zcGxpdCgnLicpLmxlbmd0aCAhPT0gMTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGVzIG5vIGFjY2Vzc2luZyB0byB0aGUgbWV0aG9kXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2ROYW1lIE5hbWUgb2YgbWV0aG9kXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQHRocm93c1xuICAgKi9cbiAgX2hhbmRsZU5vQWNjZXNzRXJyb3IobWV0aG9kTmFtZSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgTWV0aG9kQWNjZXNzRXJyb3IobWV0aG9kTmFtZSwgdGhpcy5fdG9rZW5UeXBlKSk7XG4gIH1cblxufVxuIl19